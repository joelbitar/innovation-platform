version: "3.8"
services:
  frontend: &frontend
    container_name: ip-frontend
    build:
      context: . #if your Dockerfile is not at the same level change the path here (./frontend)
      dockerfile: docker/frontend.dockerfile
      target: dev
    restart: always
    command: yarn dev
    environment:
      - NODE_ENV=development
      #if you’re using Windows, you may need to uncomment the next line - Sol from @Kobe E
      #- WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

  frontend-dev:
    <<: *frontend
    container_name: ip_frontend_dev
    environment:
      - NODE_ENV=development
      #if you’re using Windows, you may need to uncomment the next line - Sol from @Kobe E
      #- WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - ip_network

  frontend-test:
    <<: *frontend
    container_name: ip_frontend_test
    command: yarn test
    environment:
      - NODE_ENV=development

  backend: &backend
    image: "ip_backend"
    container_name: ip_backend
    build:
      context: .
      dockerfile: docker/backend.dockerfile
      target: ip_backend
      args: &backend-args
        DJANGO_DEFAULT_DATABASE_URL: "${DJANGO_DEFAULT_DATABASE_URL}"
        DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
        DJANGO_STATIC_URL: "${DJANGO_STATIC_URL}"
        DJANGO_MEDIA_URL: "${DJANGO_MEDIA_URL}"
        TAG_NAME: "${TAG_NAME}"
        EMAIL_DEFAULT_FROM: "${EMAIL_DEFAULT_FROM}"
        DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS}"
        DJANGO_DEBUG: 'off'

    ports:
      - "8000:8000"

  backend-dev:
    <<: *backend
    container_name: ip_backend_dev
    build:
      context: .
      dockerfile: docker/backend.dockerfile
      target: ip_dev
      args:
        <<: *backend-args
        DJANGO_ALLOWED_HOSTS: 'localhost,backend.dkr'
        DJANGO_DEFAULT_DATABASE_URL: "sqlite:////src/db.sqlite3"
        DJANGO_DEBUG: 'on'
        DJANGO_STATIC_URL: "/static/"
        DJANGO_MEDIA_URL: "/media/"
        DJANGO_SECRET_KEY: 'django-insecure-)c%s=kj@d9l-n9uv!p&8&60=k74n(y4mf3g*c5r+)5ode7p%k8'
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/src
    networks:
      ip_network:
        aliases:
          - backend.dkr

  backend-test:
    <<: *backend
    container_name: ip-backend-test
    command: python manage.py test
    build:
      context: .
      dockerfile: docker/backend.dockerfile
      target: ip_test
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/src

networks:
  ip_network:
    name: ip_network