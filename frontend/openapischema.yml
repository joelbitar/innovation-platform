openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/business/business_area/:
    get:
      operationId: listBusinessAreas
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
          description: ''
      tags:
      - api
    post:
      operationId: createBusinessArea
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessArea'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
          description: ''
      tags:
      - api
  /api/business/business_area/{id}/:
    get:
      operationId: retrieveBusinessArea
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this business area.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
          description: ''
      tags:
      - api
    put:
      operationId: updateBusinessArea
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this business area.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessArea'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBusinessArea
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this business area.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessArea'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBusinessArea
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this business area.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user/me/:
    get:
      operationId: listUserMes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/user/me/profile/:
    get:
      operationId: retrieveUserProfile
      description: View to work with profile for the currently logged in user
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserProfile
      description: View to work with profile for the currently logged in user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
  /api/auth/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/auth/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/auth/token/blacklist/:
    post:
      operationId: createTokenBlacklist
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    BusinessArea:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          maxLength: 64
        description:
          type: string
        users:
          type: array
          items:
            type: integer
      required:
      - name
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - CONTRIBUTOR
          - MODERATOR
          - ADMIN
          type: string
        user:
          type: string
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
